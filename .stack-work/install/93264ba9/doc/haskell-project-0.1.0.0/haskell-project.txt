-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Initial project template from stack
--   
--   Please see README.md
@package haskell-project
@version 0.1.0.0

module Queue
data Queue a
emptyQ :: Queue a
isEmptyQ :: Queue a -> Bool
addQ :: a -> Queue a -> Queue a
remQ :: Queue a -> Maybe (a, Queue a)
fromListQ :: [a] -> Queue a
instance GHC.Show.Show a => GHC.Show.Show (Queue.Queue a)

module List
safeHead :: [a] -> Maybe a
safeTail :: [a] -> Maybe [a]

module Dequeue
data Dequeue a
emptyDEQ :: Dequeue a
isEmptyDEQ :: Dequeue a -> Bool
lengthDEQ :: Dequeue a -> Int
firstDEQ :: Dequeue a -> Maybe a
lastDEQ :: Dequeue a -> Maybe a
takefrontDEQ :: Int -> Dequeue a -> [a]
takeBackDEQ :: Int -> Dequeue a -> [a]
pushfrontDEQ :: Dequeue a -> a -> Dequeue a
popfrontDEQ :: Dequeue a -> Maybe (a, Dequeue a)
pushBackDEQ :: Dequeue a -> a -> Dequeue a
popBackDEQ :: Dequeue a -> Maybe (a, Dequeue a)
fromListDEQ :: [a] -> Dequeue a
extractDEQ :: Maybe (a, Dequeue a) -> (Maybe a, Dequeue a)
instance GHC.Show.Show a => GHC.Show.Show (Dequeue.Dequeue a)

module Project
someFunc :: IO ()
